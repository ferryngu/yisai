{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red63\green110\blue116;\red92\green38\blue153;
\red46\green13\blue110;\red196\green26\blue22;\red38\green71\blue75;\red28\green0\blue207;\red0\green116\blue0;
\red14\green14\blue255;\red83\green83\blue83;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f0\fs22 \cf0 \CocoaLigature0         \cf2 let\cf0  orgWindow = \cf3 window\cf0 \
        \
        \cf3 window\cf0  = \cf4 UIWindow\cf0 (frame: \cf4 UIScreen\cf0 .\cf5 mainScreen\cf0 ().\cf4 bounds\cf0 )\
\
        \cf3 fetips\cf0  = \cf3 FETips\cf0 ()\
        \
        \cf3 window\cf0 ?.\cf4 rootViewController\cf0  = \cf4 UIViewController\cf0 ()\
    \
        \cf3 window\cf0 ?.\cf4 backgroundColor\cf0  = \cf4 UIColor\cf0 .\cf5 redColor\cf0 ()\
\cf5 print\cf0 (\cf6 "111111111"\cf0 )\
        \cf3 window\cf0 ?.\cf5 makeKeyAndVisible\cf0 ()\
\cf5 print\cf0 (\cf6 "2222222"\cf0 )\
        \cf3 fetips\cf0 .\cf7 showTipsInMainThread\cf0 (Text: \cf6 "prepareResumeCallBackInMainThread"\cf0 )\
\
        \cf2 let\cf0  time = \cf5 dispatch_time\cf0 (\cf4 DISPATCH_TIME_NOW\cf0 , (\cf4 Int64\cf0 )(\cf8 5\cf0  * \cf4 NSEC_PER_SEC\cf0 ))\
\
        \cf5 dispatch_after\cf0 (time, \cf5 dispatch_get_main_queue\cf0 (), \{\
\
            \cf2 self\cf0 .\cf3 window\cf0 ?.\cf5 resignKeyWindow\cf0 ()\
            \
            \cf2 self\cf0 .\cf3 window\cf0  = orgWindow\
            \
            orgWindow?.\cf5 makeKeyAndVisible\cf0 ()\
            \
            \cf3 fetips\cf0 .\cf7 showTipsInMainThread\cf0 (Text: \cf6 "111111"\cf0 )\
\
        \})\
\
\cf5 print\cf0 (\cf6 "3333333333"\cf0 )\
\
\cf9 /*\
        gFeCoreDumpHandle = FECoreDumpHandle(Ver:1001,Url:"{\field{\*\fldinst{HYPERLINK "http://www.36oa.com/abc.json"}}{\fldrslt \cf10 http://www.36oa.com/abc.json}}")\
\
        gFeCoreDumpHandle.prepareResumeCallBackInMainThread = \{\
            print("prepareResumeCallBackInMainThread")\
            fetips.showTipsInMainThread(Text: "prepareResumeCallBackInMainThread")\
        \}\
\
        gFeCoreDumpHandle.finishResumeCallBackInMainThread = \{\
            print("finishResumeCallBackInMainThread")\
            fetips.showTipsInMainThread(Text: "finishResumeCallBackInMainThread")\
            \
            //sleep(3)\
            \
            //self.window?.rootViewController = rv\
            //self.window?.resignKeyWindow()\
\
            \
        \}\
*/\cf2 \
\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f1 \cf2 \
#####################################################\
\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f0 \cf2 \
var\cf0  fetips:\cf3 FETips\cf0 !\
\cf2 public\cf0  \cf2 var\cf0  windowTips: \cf4 UIWindow\cf0 !\
\
\cf2 public\cf0  \cf2 func\cf0  coreDumpTips()->\cf4 Void\cf0 \{\
    \cf9 //fetips = FETips()\
\cf0     \cf9 //fetips.showTipsInMainThread(Text: "CoreDump")\
\cf0     \cf9 /*\
    let alertcontroller = UIAlertController(title: "hahha", message: "hahah", preferredStyle: .Alert)\
    \
    dispatch_sync(dispatch_get_main_queue(), \{ () -> Void in\
         windowTips.addSubview(alertcontroller.view)\
    \})\
    */\cf0 \
    \
    \
    \cf2 let\cf0  view = \cf4 UIView\cf0 (frame: \cf4 CGRect\cf0 (x: \cf8 0\cf0 , y: \cf8 0\cf0 , width: \cf8 200\cf0 , height: \cf8 200\cf0 ))\
    view.\cf4 center\cf0  = \cf4 CGPoint\cf0 (x: \cf8 100\cf0 , y: \cf8 100\cf0 )\
    view.\cf4 backgroundColor\cf0  = \cf4 UIColor\cf0 .\cf5 redColor\cf0 ()\
    \
    \cf5 dispatch_async\cf0 (\cf5 dispatch_get_main_queue\cf0 (), \{ () -> \cf4 Void\cf0  \cf2 in\cf0 \
        \cf3 windowTips\cf0 .\cf5 addSubview\cf0 (view)\
    \})\
    \
    \cf9 //createCoreDumpFileFlag()\
\cf0     \
\}\
\
\cf2 let\cf0  fe_coredump_callback_swift:\cf2 @convention\cf0 (c) () -> \cf4 Void\cf0  = \{\
\
    \cf7 createCoreDumpFileFlag\cf0 ()\
\
    \cf9 //coreDumpTips()\
\cf0     \
    \cf9 //let fetips1 = FETips()\
\cf0     \cf9 //fetips1.showTipsInMainThread(Text: "CoreDump")\
\cf0 \
\}\
\
\
        \cf3 fe_coredump_call_back\cf0  = \cf3 fe_coredump_callback_swift\cf0 \
        \
        \cf2 let\cf0  uncaughtExceptionHandler:\cf2 @convention\cf0 (c) (\cf4 NSException\cf0 ) -> \cf4 Void\cf0  = \{\
            (exception) -> \cf4 Void\cf0  \cf2 in\cf0 \
\
            \cf9 //coreDumpTips()\
\cf0             \cf9 //fe_coredump_call_back()\
\cf0             \
            \cf7 createCoreDumpFileFlag\cf0 ()\
\
        \}\
\
        \cf5 NSSetUncaughtExceptionHandler\cf0 (uncaughtExceptionHandler)\
\
\
\
\
\
        \cf2 let\cf0  emojiString = \cf3 emojiStringArry\cf0 [indexPath.\cf4 row\cf0 ]\
\
        \cf2 if\cf0  \cf6 "\uc0\u9003 "\cf0  == emojiString \{\
\
            \cf2 if\cf0  \cf2 true\cf0  == \cf3 inputTextView\cf0 .\cf4 text\cf0 .\cf4 isEmpty\cf0  \{\
                \cf2 return\cf0 \
            \}\
\
            \cf2 let\cf0  lastChart = \cf3 inputTextView\cf0 .\cf4 text\cf0 .\cf5 substringFromIndex\cf0 (\cf3 inputTextView\cf0 .\cf4 text\cf0 .\cf4 endIndex\cf0 .\cf5 predecessor\cf0 ())\
\
            \cf2 let\cf0  len = lastChart.\cf5 lengthOfBytesUsingEncoding\cf0 (\cf4 NSUnicodeStringEncoding\cf0 )\
            \
            \cf2 if\cf0  \cf8 4\cf0  == len \{\
            \
                \cf2 let\cf0  range = \cf5 NSMakeRange\cf0 (\cf3 inputTextView\cf0 .\cf4 selectedRange\cf0 .\cf4 location\cf0 -\cf8 2\cf0 ,\cf8 2\cf0 )\
                \cf3 inputTextView\cf0 .\cf4 textStorage\cf0 .\cf5 deleteCharactersInRange\cf0 (range)\
                \
                \cf9 //inputTextView.delegate?.textViewDidChange!(inputTextView)\
\cf0                 \
                \cf3 inputTextView\cf0 .\cf5 needsUpdateConstraints\cf0 ()\
                \
                \
                \
            \} \cf2 else\cf0  \cf2 if\cf0  \cf8 2\cf0  == len \{\
\
                \cf2 let\cf0  range = \cf5 NSMakeRange\cf0 (\cf3 inputTextView\cf0 .\cf4 selectedRange\cf0 .\cf4 location\cf0 -\cf8 1\cf0 ,\cf8 1\cf0 )\
                \cf3 inputTextView\cf0 .\cf4 textStorage\cf0 .\cf5 deleteCharactersInRange\cf0 (range)\
                \
                \cf9 //inputTextView.delegate?.textViewDidChange!(inputTextView)\
\cf0 \
                \cf3 inputTextView\cf0 .\cf5 deleteBackward\cf0 ()\
                \
                \cf3 inputTextView\cf0 .\cf5 needsUpdateConstraints\cf0 ()\
\
            \} \cf2 else\cf0  \{\
\
                \cf2 return\cf0 \
            \
            \}\
    \
            \cf2 return\cf0 \
\
        \}\
\
        \cf2 let\cf0  attributedString = \cf4 NSAttributedString\cf0 (string: \cf3 emojiStringArry\cf0 [indexPath.\cf4 row\cf0 ],attributes: [\cf4 NSFontAttributeName\cf0 :\cf3 inputTextView\cf0 .\cf4 font\cf0 !])\
\
        \cf3 inputTextView\cf0 .\cf4 textStorage\cf0 .\cf5 insertAttributedString\cf0 (attributedString, atIndex: \cf3 inputTextView\cf0 .\cf4 selectedRange\cf0 .\cf4 location\cf0 )\
\
        \cf3 inputTextView\cf0 .\cf4 selectedRange\cf0  = \cf5 NSMakeRange\cf0 (\cf3 inputTextView\cf0 .\cf4 selectedRange\cf0 .\cf4 location\cf0 +\cf8 2\cf0 ,\cf8 0\cf0 )\
        \
        \cf3 inputTextView\cf0 .\cf5 scrollRangeToVisible\cf0 (\cf3 inputTextView\cf0 .\cf4 selectedRange\cf0 )\
\
        \cf3 inputTextView\cf0 .\cf4 delegate\cf0 ?.textViewDidChange!(\cf3 inputTextView\cf0 )
\f2\fs24 \cf11 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0
\cf11 \
\
\
\uc0\u9003 \

\f0\fs22 \cf9 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0
\cf9 //let emojiString =  UnicodeScalar(emojiIntArry[indexPath.row]).escape(asASCII: false\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f1 \cf0 \CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf0 \'d4\'da FrameWork \'d6\'d0\'d7\'b0\'d4\'d8 StoryBoard\cf2 \CocoaLigature0 \
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0
\cf2 \
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f0 \cf0         \cf2 let\cf0  userInfo = notification.\cf4 userInfo\cf0 !\
        \
        \cf9 //let animationDuration: NSTimeInterval = (userInfo[UIKeyboardAnimationDurationUserInfoKey] as! NSNumber).doubleValue\
\cf0         \cf9 //let animationOptions = UIViewAnimationOptions(rawValue:UInt((userInfo[UIKeyboardAnimationCurveUserInfoKey] as! NSNumber).integerValue))
\f1 \cf2 \
\

\f0 \
public\cf0  \cf2 func\cf0  getFEInputEmojiViewController()->(\cf3 FEInputEmojiViewController\cf0 !)\{\
\
    \cf2 let\cf0  s = \cf4 NSBundle\cf0 .\cf5 mainBundle\cf0 ().\cf4 resourcePath\cf0 ! + \cf6 "/Frameworks/FEiOSUI.framework"\cf0 \
\
    \cf9 //print("s = \\(s)")\
\cf0     \
    \cf2 let\cf0  b = \cf4 NSBundle\cf0 (path:s)\
    b?.\cf5 load\cf0 ()\
    \
    \cf9 //print("b = \\(b)")\
\cf0     \
    \cf2 let\cf0  feInputPadStoryBoard:\cf4 UIStoryboard\cf0  = \cf4 UIStoryboard\cf0 (name: \cf6 "FEInputPad"\cf0 , bundle: b)\
    \
    \cf2 let\cf0  feInputEmojiViewController = feInputPadStoryBoard.\cf5 instantiateViewControllerWithIdentifier\cf0 (\cf6 "EmojiPad"\cf0 )  \cf2 as\cf0 ! \cf3 FEInputEmojiViewController\cf0 \
    \
    \cf2 return\cf0  feInputEmojiViewController\
\
\
\}\
\
\
\
        \cf9 /*\
        \
        let s = NSBundle.mainBundle().resourcePath! + "/Frameworks/FEiOSUI.framework"\
        \
        //print("s = \\(s)")\
        \
        let b = NSBundle(path:s)\
        b?.load()\
        \
        let views = b?.loadNibNamed("FEEmojiPadView", owner: nil, options: nil)\
        if views == nil \{\
            return\
        \}\
        \
        let emojiPadView = views![0] as? FEEmojiPadView\
        \
\
\
        if emojiPadView == nil \{\
            return\
        \}\
        \
        //emojiPadView!.frame = CGRect(x: 10, y: 90, width: 90, height: 90)\
        \
        //let v = emojiPadView?.viewWithTag(1001)\
\
        //v?.removeFromSuperview()\
        //v!.frame = CGRect(x: 0, y: 0, width: 30, height: 30)\
        \
        self.view.addSubview(emojiPadView!)\
\
        */\cf0 \
        \
        \cf9 //initUI()\
\cf0         \
        \cf9 //let vc = TestViewController()}